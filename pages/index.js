import Head from "next/head";
import { useState, useCallback, useMemo, useEffect } from "react";
import ReactFlow, {
  useNodesState,
  useEdgesState,
  getIncomers,
  getOutgoers,
  addEdge,
  getConnectedEdges,
} from "reactflow";
import "reactflow/dist/style.css";
import Task from "../components/Task";
import { useSelector } from "react-redux";

export default function Home() {
  const [email, setEmail] = useState("");
  const [subject, setSubject] = useState("");
  const initialNodes = useSelector((state) => state.nodes.nodes);
  const initialEdges = useSelector((state) => state.nodes.edges);
  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);
  const nodeTypes = useMemo(() => ({ task: Task }), []);

  useEffect(() => {
    setNodes(initialNodes);
    setEdges(initialEdges);
  }, [initialNodes, setNodes, initialEdges, setEdges]);

  const onConnect = useCallback(
    (params) => setEdges((eds) => addEdge(params, eds)),
    [setEdges]
  );

  const sendEmail = (index) => {
    fetch("/api/send", {
      method: "POST",
      body: JSON.stringify({
        email,
        subject,
        tasks: nodes.map((data) => data.value), // map all nodes to a string array
      }),
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((data) => {
        alert(`Sent to processing`);
      })
      .catch((err) => {
        alert(`Encountered an error when message${index} ❌`);
        console.error(err);
      });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log({ email, subject });
    sendEmail();
    setEmail("");
    setSubject("");
  };

  return (
    <>
      <Head>
        <title>Email Outreach - Resend & ReactFlow</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <header className="header">
          <h1 style={{ marginBottom: "15px" }}>
            Email Outreach with ReactFlow and Resend
          </h1>
        </header>

        <form className="form" onSubmit={handleSubmit}>
          <label htmlFor="email">Email</label>
          <input
            type="email"
            name="email"
            id="email"
            className="input"
            value={email}
            required
            onChange={(e) => setEmail(e.target.value)}
          />

          <label htmlFor="subject">Subject</label>
          <input
            type="text"
            name="subject"
            id="subject"
            className="input"
            value={subject}
            required
            onChange={(e) => setSubject(e.target.value)}
          />
          <div style={{ height: "60vh", width: "100%", marginTop: "20px" }}>
            <ReactFlow
              nodes={nodes}
              edges={edges}
              onNodesChange={onNodesChange}
              onEdgesChange={onEdgesChange}
              onConnect={onConnect}
              nodeTypes={nodeTypes}
            />
          </div>
          <button className="submitBtn">START AUTOMATION</button>
        </form>
      </main>
    </>
  );
}
